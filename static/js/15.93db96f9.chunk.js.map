{"version":3,"sources":["components/Projects/ProjectList/WeatherApp/cityInput.js"],"names":["cityInput","props","_useState","useState","_useState2","Object","C_Users_Eishta_PC_Desktop_React_newproj_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","value","setValue","onChangeCity","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","marginBottom","zIndex","react_autocomplete__WEBPACK_IMPORTED_MODULE_2___default","getItemValue","item","concat","items","label","renderItem","isHighlighted","background","onChange","e","target","console","log","onSelect","val","onClick","getWeather"],"mappings":"uJAkGeA,UA9FG,SAAAC,GAAS,IAAAC,EACGC,mBAAS,IADZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBK,EADgBH,EAAA,GACTI,EADSJ,EAAA,GAEfK,EAAiBR,EAAjBQ,aACRC,oBAAU,WACND,EAAaF,IACd,CAACA,IAkEJ,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAACC,aAAc,QAASC,OAAQ,MACvEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACIG,MAAO,CAAEC,aAAc,QACvBG,aAVS,SAACC,GAClB,SAAAC,OAAUD,EAAKb,QAUPe,MArEa,CACrB,CACIC,MAAO,WACPhB,MAAO,YAEX,CACIgB,MAAO,cACPhB,MAAO,eAEX,CACIgB,MAAO,UACPhB,MAAO,YA2DHiB,WA1BO,SAACJ,EAAMK,GACtB,OACId,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEW,WAAYD,EAAgB,YAAc,UACnDL,EAAKG,QAwBNhB,MAAOA,EACPoB,SAnDK,SAACC,GACdpB,EAASoB,EAAEC,OAAOtB,OAClBuB,QAAQC,IAAI,iCAAkCH,EAAEC,OAAOtB,QAkD/CyB,SAzCK,SAACC,GACdzB,EAASyB,GACTH,QAAQC,IAAI,qCAAsCE,OA2C9CtB,EAAAC,EAAAC,cAAA,UAAQqB,QAASjC,EAAMkC,YAAvB","file":"static/js/15.93db96f9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport './cityInput.css';\r\n\r\nconst cityInput = props => {\r\n    const [value, setValue] = useState('');\r\n    const { onChangeCity } = props;\r\n    useEffect(() => {\r\n        onChangeCity(value);\r\n    }, [value]);\r\n    /**\r\n     * Initial values in the autocomplete\r\n     */\r\n    const autocompleteData = [\r\n        {\r\n            label: 'New York',\r\n            value: 'New York'\r\n        },\r\n        {\r\n            label: 'Los Angeles',\r\n            value: 'Los Angeles'\r\n        },\r\n        {\r\n            label: 'Chicago',\r\n            value: 'Chicago'\r\n        }\r\n    ];\r\n\r\n    /**\r\n     * Callback triggered when the user types in the autocomplete field\r\n     * \r\n     * @param {Event} e JavaScript Event\r\n     * @return {Event} Event of JavaScript can be used as usual.\r\n     */\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n        console.log(\"The Input Text has changed to \", e.target.value);\r\n    }\r\n\r\n    /**\r\n     * Callback triggered when the autocomplete input changes.\r\n     * \r\n     * @param {Object} val Value returned by the getItemValue function.\r\n     * @return {Nothing} No value is returned\r\n     */\r\n    const onSelect = (val) => {\r\n        setValue(val);\r\n        console.log(\"Option from 'database' selected : \", val);\r\n    }\r\n\r\n    /**\r\n     * Define the markup of every rendered item of the autocomplete.\r\n     * \r\n     * @param {Object} item Single object from the data that can be shown inside the autocomplete\r\n     * @param {Boolean} isHighlighted declares wheter the item has been highlighted or not.\r\n     * @return {Markup} Component\r\n     */\r\n    const renderItem = (item, isHighlighted) => {\r\n        return (\r\n            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\r\n                {item.label}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Define which property of the autocomplete source will be show to the user.\r\n     * \r\n     * @param {Object} item Single object from the data that can be shown inside the autocomplete\r\n     * @return {String} val\r\n     */\r\n    const getItemValue = (item) => {\r\n        return `${item.value}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"row input-city\" style={{marginBottom: '100px', zIndex: '9'}}>\r\n        <div className=\"col-7 text-secondary autocomplete\">\r\n            <Autocomplete\r\n                style={{ marginBottom: \"40px\" }}\r\n                getItemValue={getItemValue}\r\n                items={autocompleteData}\r\n                renderItem={renderItem}\r\n                value={value}\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n            />\r\n            </div>\r\n      \r\n            <button onClick={props.getWeather}>get</button>\r\n            \r\n        </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default cityInput;\r\n"],"sourceRoot":""}